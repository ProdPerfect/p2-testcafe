'use strict';

var _regeneratorRuntime = require('babel-runtime/regenerator').default;

var _interopRequireDefault = require('babel-runtime/helpers/interop-require-default').default;

exports.__esModule = true;

var _path = require('path');

var _path2 = _interopRequireDefault(_path);

var _readDir = require('./read-dir');

var _readDir2 = _interopRequireDefault(_readDir);

function getTests(dirPath) {
    var _ref, dirs, files, tests, index;

    return _regeneratorRuntime.async(function getTests$(context$1$0) {
        while (1) switch (context$1$0.prev = context$1$0.next) {
            case 0:
                context$1$0.next = 2;
                return _regeneratorRuntime.awrap(_readDir2.default(dirPath));

            case 2:
                _ref = context$1$0.sent;
                dirs = _ref.dirs;
                files = _ref.files;
                tests = files.map(function (item) {
                    return _path2.default.join(dirPath, item);
                });
                index = 0;

            case 7:
                if (!dirs[index]) {
                    context$1$0.next = 15;
                    break;
                }

                context$1$0.t0 = tests;
                context$1$0.next = 11;
                return _regeneratorRuntime.awrap(getTests(_path2.default.join(dirPath, dirs[index++])));

            case 11:
                context$1$0.t1 = context$1$0.sent;
                tests = context$1$0.t0.concat.call(context$1$0.t0, context$1$0.t1);
                context$1$0.next = 7;
                break;

            case 15:
                return context$1$0.abrupt('return', tests);

            case 16:
            case 'end':
                return context$1$0.stop();
        }
    }, null, this);
}

exports.default = getTests;
module.exports = exports.default;